version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "15672:15672"  # RabbitMQ Management UI
      - "5672:5672"    # AMQP port
      - "61613:61613"  # STOMP port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    command: >
      sh -c "
        rabbitmq-plugins enable rabbitmq_stomp;
        rabbitmq-server"

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: bidder

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - postgres

  backend:
    build: .
    container_name: bidderbackend
    ports:
      - "8080:8080"
    depends_on:
      - rabbitmq
      - postgres
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq  # Nombre del servicio de RabbitMQ
      SPRING_RABBITMQ_PORT: 5672
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bidder
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest

  backend_ruby:
    build: ./backend_ruby
    container_name: bidderbackend_ruby
    ports:
      - "3000:3000"
    command:
        sh -c "
            bundle install;
            rails server;
            rails db:migrate;"

  frontend:
    image: node:14
    container_name: bidderfrontend
    ports:
      - "1573:1573"
    depends_on:
      - backend
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: >
      sh -c "
        npm install;
        npm run dev"
      
    
